(BETA) Always overwrite with a newer file: (BETA) Always overwrite with a newer file
(Beta) Use ignore files: (Beta) Use ignore files
(Days passed, 0 to disable automatic-deletion): (Days passed, 0 to disable automatic-deletion)
(ex. Read chunks online) If this option is enabled, LiveSync reads chunks online directly instead of replicating them locally. Increasing Custom chunk size is recommended.:
  (ex. Read chunks online) If this option is enabled, LiveSync reads chunks
  online directly instead of replicating them locally. Increasing Custom chunk
  size is recommended.
(MB) If this is set, changes to local and remote files that are larger than this will be skipped. If the file becomes smaller again, a newer one will be used.:
  (MB) If this is set, changes to local and remote files that are larger than
  this will be skipped. If the file becomes smaller again, a newer one will be
  used.
(Mega chars): (Mega chars)
(Not recommended) If set, credentials will be stored in the file.: (Not recommended) If set, credentials will be stored in the file.
(Obsolete) Use an old adapter for compatibility: (Obsolete) Use an old adapter for compatibility
Access Key: Access Key
Always prompt merge conflicts: Always prompt merge conflicts
Apply Latest Change if Conflicting: Apply Latest Change if Conflicting
Apply preset configuration: Apply preset configuration
Automatically Sync all files when opening Obsidian.: Automatically Sync all files when opening Obsidian.
Batch database update: Batch database update
Batch limit: Batch limit
Batch size: Batch size
Batch size of on-demand fetching: Batch size of on-demand fetching
Before v0.17.16, we used an old adapter for the local database. Now the new adapter is preferred. However, it needs local database rebuilding. Please disable this toggle when you have enough time. If leave it enabled, also while fetching from the remote database, you will be asked to disable this.:
  Before v0.17.16, we used an old adapter for the local database. Now the new
  adapter is preferred. However, it needs local database rebuilding. Please
  disable this toggle when you have enough time. If leave it enabled, also while
  fetching from the remote database, you will be asked to disable this.
Bucket Name: Bucket Name
cmdConfigSync:
  showCustomizationSync: Show Customization sync
Comma separated `.gitignore, .dockerignore`: Comma separated `.gitignore, .dockerignore`
Compute revisions for chunks: Compute revisions for chunks
Data Compression: Data Compression
Database Name: Database Name
Database suffix: Database suffix
Delay conflict resolution of inactive files: Delay conflict resolution of inactive files
Delay merge conflict prompt for inactive files.: Delay merge conflict prompt for inactive files.
Delete old metadata of deleted files on start-up: Delete old metadata of deleted files on start-up
Device name: Device name
dialog:
  yourLanguageAvailable:
    _value: >-
      Self-hosted LiveSync had translations for your language, so the %{Display
      language} setting was enabled.


      Note: Not all messages are translated. We are waiting for your
      contributions!

      Note 2: If you create an Issue, **please revert to %{lang-def}** and then
      take screenshots, messages and logs. This can be done in the setting
      dialogue.

      May you find it easy to use!
    btnRevertToDefault: Keep %{lang-def}
    Title: " Translation is available!"
Disables logging, only shows notifications. Please disable if you report an issue.:
  Disables logging, only shows notifications. Please disable if you report an
  issue.
Display Language: Display Language
Do not check configuration mismatch before replication: Do not check configuration mismatch before replication
Do not keep metadata of deleted files.: Do not keep metadata of deleted files.
Do not split chunks in the background: Do not split chunks in the background
Do not use internal API: Do not use internal API
Doctor:
  Button:
    DismissThisVersion: No, and do not ask again until the next release
    Fix: Fix it
    FixButNoRebuild: Fix it but no rebuild
    No: No
    Skip: Leave it as is
    Yes: Yes
  Dialogue:
    Main: >-
      Hi! Config Doctor has been activated because of ${activateReason}!

      And, unfortunately some configurations were detected as potential
      problems.

      Please be assured. Let's solve them one by one.


      To let you know ahead of time, we will ask you about the following items.


      ${issues}


      Shall we get started?
    MainFix: |-

      ## ${name}

      | Current | Ideal |
      |:---:|:---:|
      | ${current} | ${ideal} |

      **Recommendation Level:** ${level}

      ### Why this has been detected?

      ${reason}

      ${note}

      Fix this to the ideal value?
    Title: Self-hosted LiveSync Config Doctor
    TitleAlmostDone: Almost done!
    TitleFix: Fix issue ${current}/${total}
  Level:
    Must: Must
    Necessary: Necessary
    Optional: Optional
    Recommended: Recommended
  Message:
    NoIssues: No issues detected!
    RebuildLocalRequired: Attention! A local database rebuild is required to apply this!
    RebuildRequired: Attention! A rebuild is required to apply this!
    SomeSkipped: We left some issues as is. Shall I ask you again on next startup?
Enable advanced features: Enable advanced features
Enable customization sync: Enable customization sync
Enable Developers' Debug Tools.: Enable Developers' Debug Tools.
Enable edge case treatment features: Enable edge case treatment features
Enable poweruser features: Enable poweruser features
Enable this if your Object Storage doesn't support CORS: Enable this if your Object Storage doesn't support CORS
Enable this option to automatically apply the most recent change to documents even when it conflicts:
  Enable this option to automatically apply the most recent change to documents
  even when it conflicts
Encrypt contents on the remote database. If you use the plugin's synchronization feature, enabling this is recommended.:
  Encrypt contents on the remote database. If you use the plugin's
  synchronization feature, enabling this is recommended.
Encrypting sensitive configuration items: Encrypting sensitive configuration items
Encryption phassphrase. If changed, you should overwrite the server's database with the new (encrypted) files.:
  Encryption phassphrase. If changed, you should overwrite the server's database
  with the new (encrypted) files.
End-to-End Encryption: End-to-End Encryption
Endpoint URL: Endpoint URL
Enhance chunk size: Enhance chunk size
Fetch chunks on demand: Fetch chunks on demand
Fetch database with previous behaviour: Fetch database with previous behaviour
Filename: Filename
Forces the file to be synced when opened.: Forces the file to be synced when opened.
Handle files as Case-Sensitive: Handle files as Case-Sensitive
If disabled(toggled), chunks will be split on the UI thread (Previous behaviour).:
  If disabled(toggled), chunks will be split on the UI thread (Previous
  behaviour).
If enabled per-filed efficient customization sync will be used. We need a small migration when enabling this. And all devices should be updated to v0.23.18. Once we enabled this, we lost a compatibility with old versions.:
  If enabled per-filed efficient customization sync will be used. We need a
  small migration when enabling this. And all devices should be updated to
  v0.23.18. Once we enabled this, we lost a compatibility with old versions.
If enabled, chunks will be split into no more than 100 items. However, dedupe is slightly weaker.:
  If enabled, chunks will be split into no more than 100 items. However, dedupe
  is slightly weaker.
If enabled, newly created chunks are temporarily kept within the document, and graduated to become independent chunks once stabilised.:
  If enabled, newly created chunks are temporarily kept within the document, and
  graduated to become independent chunks once stabilised.
If enabled, the file under 1kb will be processed in the UI thread.: If enabled, the file under 1kb will be processed in the UI thread.
If enabled, the notification of hidden files change will be suppressed.: If enabled, the notification of hidden files change will be suppressed.
If this enabled, all chunks will be stored with the revision made from its content. (Previous behaviour):
  If this enabled, all chunks will be stored with the revision made from its
  content. (Previous behaviour)
If this enabled, All files are handled as case-Sensitive (Previous behaviour).: If this enabled, All files are handled as case-Sensitive (Previous behaviour).
If this enabled, chunks will be split into semantically meaningful segments. Not all platforms support this feature.:
  If this enabled, chunks will be split into semantically meaningful segments.
  Not all platforms support this feature.
If this is set, changes to local files which are matched by the ignore files will be skipped. Remote changes are determined using local ignore files.:
  If this is set, changes to local files which are matched by the ignore files
  will be skipped. Remote changes are determined using local ignore files.
If this option is enabled, PouchDB will hold the connection open for 60 seconds, and if no change arrives in that time, close and reopen the socket, instead of holding it open indefinitely. Useful when a proxy limits request duration but can increase resource usage.:
  If this option is enabled, PouchDB will hold the connection open for 60
  seconds, and if no change arrives in that time, close and reopen the socket,
  instead of holding it open indefinitely. Useful when a proxy limits request
  duration but can increase resource usage.
Ignore files: Ignore files
Incubate Chunks in Document: Incubate Chunks in Document
Interval (sec): Interval (sec)
K:
  exp: Experimental
  long_p2p_sync: "%{title_p2p_sync} (%{exp})"
  P2P: "%{Peer}-to-%{Peer}"
  Peer: Peer
  ScanCustomization: Scan customization
  short_p2p_sync: P2P Sync (%{exp})
  title_p2p_sync: Peer-to-Peer Sync
Keep empty folder: Keep empty folder
lang_def: Default
lang-de: Deutsche
lang-def: "%{lang_def}"
lang-es: Español
lang-ja: 日本語
lang-ko: 한국어
lang-ru: Русский
lang-zh: 简体中文
lang-zh-tw: 繁體中文
LiveSync could not handle multiple vaults which have same name without different prefix, This should be automatically configured.:
  LiveSync could not handle multiple vaults which have same name without
  different prefix, This should be automatically configured.
liveSyncReplicator:
  beforeLiveSync: Before LiveSync, start OneShot once...
  cantReplicateLowerValue: We can't replicate more lower value.
  checkingLastSyncPoint: Looking for the point last synchronized point.
  couldNotConnectTo: |-
    Could not connect to ${uri} : ${name}
    (${db})
  couldNotConnectToRemoteDb: "Could not connect to remote database: ${d}"
  couldNotConnectToServer: Could not connect to server.
  couldNotConnectToURI: Could not connect to ${uri}:${dbRet}
  couldNotMarkResolveRemoteDb: Could not mark resolve remote database.
  liveSyncBegin: LiveSync begin...
  lockRemoteDb: Lock remote database to prevent data corruption
  markDeviceResolved: Mark this device as 'resolved'.
  oneShotSyncBegin: OneShot Sync begin... (${syncMode})
  remoteDbCorrupted: Remote database is newer or corrupted, make sure to latest
    version of self-hosted-livesync installed
  remoteDbCreatedOrConnected: Remote Database Created or Connected
  remoteDbDestroyed: Remote Database Destroyed
  remoteDbDestroyError: "Something happened on Remote Database Destroy:"
  remoteDbMarkedResolved: Remote database has been marked resolved.
  replicationClosed: Replication closed
  replicationInProgress: Replication is already in progress
  retryLowerBatchSize: Retry with lower batch size:${batch_size}/${batches_limit}
  unlockRemoteDb: Unlock remote database to prevent data corruption
liveSyncSetting:
  errorNoSuchSettingItem: "No such setting item: ${key}"
  originalValue: "Original: ${value}"
  valueShouldBeInRange: The value should ${min} < value < ${max}
liveSyncSettings:
  btnApply: Apply
logPane:
  autoScroll: Auto scroll
  logWindowOpened: Log window opened
  pause: Pause
  title: Self-hosted LiveSync Log
  wrap: Wrap
Maximum delay for batch database updating: Maximum delay for batch database updating
Maximum file size: Maximum file size
Maximum Incubating Chunk Size: Maximum Incubating Chunk Size
Maximum Incubating Chunks: Maximum Incubating Chunks
Maximum Incubation Period: Maximum Incubation Period
MB (0 to disable).: MB (0 to disable).
Memory cache size (by total characters): Memory cache size (by total characters)
Memory cache size (by total items): Memory cache size (by total items)
Minimum delay for batch database updating: Minimum delay for batch database updating
moduleCheckRemoteSize:
  logCheckingStorageSizes: Checking storage sizes
  logCurrentStorageSize: "Remote storage size: ${measuredSize}"
  logExceededWarning: "Remote storage size: ${measuredSize} exceeded ${notifySize}"
  logThresholdEnlarged: Threshold has been enlarged to ${size}MB
  msgConfirmRebuild: This may take a bit of a long time. Do you really want to
    rebuild everything now?
  msgDatabaseGrowing: |
    **Your database is getting larger!** But do not worry, we can address it now. The time before running out of space on the remote storage.

    | Measured size | Configured size |
    | --- | --- |
    | ${estimatedSize} | ${maxSize} |

    > [!MORE]-
    > If you have been using it for many years, there may be unreferenced chunks - that is, garbage - accumulating in the database. Therefore, we recommend rebuilding everything. It will probably become much smaller.
    >
    > If the volume of your vault is simply increasing, it is better to rebuild everything after organizing the files. Self-hosted LiveSync does not delete the actual data even if you delete it to speed up the process. It is roughly [documented](https://github.com/vrtmrz/obsidian-livesync/blob/main/docs/tech_info.md).
    >
    > If you don't mind the increase, you can increase the notification limit by 100MB. This is the case if you are running it on your own server. However, it is better to rebuild everything from time to time.
    >

    > [!WARNING]
    > If you perform rebuild everything, make sure all devices are synchronised. The plug-in will merge as much as possible, though.
  msgSetDBCapacity: >
    We can set a maximum database capacity warning, **to take action before
    running out of space on the remote storage**.

    Do you want to enable this?


    > [!MORE]-

    > - 0: Do not warn about storage size.

    >   This is recommended if you have enough space on the remote storage
    especially you have self-hosted. And you can check the storage size and
    rebuild manually.

    > - 800: Warn if the remote storage size exceeds 800MB.

    >   This is recommended if you are using fly.io with 1GB limit or IBM
    Cloudant.

    > - 2000: Warn if the remote storage size exceeds 2GB.


    If we have reached the limit, we will be asked to enlarge the limit step by
    step.
  option2GB: 2GB (Standard)
  option800MB: 800MB (Cloudant, fly.io)
  optionAskMeLater: Ask me later
  optionDismiss: Dismiss
  optionIncreaseLimit: increase to ${newMax}MB
  optionNoWarn: No, never warn please
  optionRebuildAll: Rebuild Everything Now
  titleDatabaseSizeLimitExceeded: Remote storage size exceeded the limit
  titleDatabaseSizeNotify: Setting up database size notification
moduleInputUIObsidian:
  defaultTitleConfirmation: Confirmation
  defaultTitleSelect: Select
  optionNo: No
  optionYes: Yes
moduleLiveSyncMain:
  logAdditionalSafetyScan: Additional safety scan...
  logLoadingPlugin: Loading plugin...
  logPluginInitCancelled: Plugin initialisation was cancelled by a module
  logPluginVersion: Self-hosted LiveSync v${manifestVersion} ${packageVersion}
  logReadChangelog: LiveSync has updated, please read the changelog!
  logSafetyScanCompleted: Additional safety scan completed
  logSafetyScanFailed: Additional safety scan has failed on a module
  logUnloadingPlugin: Unloading plugin...
  logVersionUpdate: LiveSync has been updated, In case of breaking updates, all
    automatic synchronization has been temporarily disabled. Ensure that all
    devices are up to date before enabling.
  msgScramEnabled: >
    Self-hosted LiveSync has been configured to ignore some events. Is this
    correct?


    | Type | Status | Note |

    |:---:|:---:|---|

    | Storage Events | ${fileWatchingStatus} | Every modification will be
    ignored |

    | Database Events | ${parseReplicationStatus} | Every synchronised change
    will be postponed |


    Do you want to resume them and restart Obsidian?


    > [!DETAILS]-

    > These flags are set by the plug-in while rebuilding, or fetching. If the
    process ends abnormally, it may be kept unintended.

    > If you are not sure, you can try to rerun these processes. Make sure to
    back your vault up.
  optionKeepLiveSyncDisabled: Keep LiveSync disabled
  optionResumeAndRestart: Resume and restart Obsidian
  titleScramEnabled: Scram Enabled
moduleLocalDatabase:
  logWaitingForReady: Waiting for ready...
moduleLog:
  showLog: Show Log
moduleMigration:
  docUri: https://github.com/vrtmrz/obsidian-livesync/blob/main/README.md#how-to-use
  logBulkSendCorrupted: Send chunks in bulk has been enabled, however, this
    feature had been corrupted. Sorry for your inconvenience. Automatically
    disabled.
  logFetchRemoteTweakFailed: Failed to fetch remote tweak values
  logLocalDatabaseNotReady: Something went wrong! The local database is not ready
  logMigratedSameBehaviour: Migrated to db:${current} with the same behaviour as before
  logMigrationFailed: Migration failed or cancelled from ${old} to ${current}
  logRedflag2CreationFail: Failed to create redflag2
  logRemoteTweakUnavailable: Could not get remote tweak values
  logSetupCancelled: The setup has been cancelled, Self-hosted LiveSync waiting for your setup!
  msgFetchRemoteAgain: >-
    As you may already know, the self-hosted LiveSync has changed its default
    behaviour and database structure.


    And thankfully, with your time and efforts, the remote database appears to
    have already been migrated. Congratulations!


    However, we need a bit more. The configuration of this device is not
    compatible with the remote database. We will need to fetch the remote
    database again. Should we fetch from the remote again now?


    ___Note: We cannot synchronise until the configuration has been changed and
    the database has been fetched again.___

    ___Note2: The chunks are completely immutable, we can fetch only the
    metadata and difference.___
  msgInitialSetup: >-
    Your device has **not been set up yet**. Let me guide you through the setup
    process.


    Please keep in mind that every dialogue content can be copied to the
    clipboard. If you need to refer to it later, you can paste it into a note in
    Obsidian. You can also translate it into your language using a translation
    tool.


    First, do you have **Setup URI**?


    Note: If you do not know what it is, please refer to the
    [documentation](${URI_DOC}).
  msgRecommendSetupUri: >-
    We strongly recommend that you generate a set-up URI and use it.

    If you do not have knowledge about it, please refer to the
    [documentation](${URI_DOC}) (Sorry again, but it is important).


    How do you want to set it up manually?
  msgSinceV02321: >-
    Since v0.23.21, the self-hosted LiveSync has changed the default behaviour
    and database structure. The following changes have been made:


    1. **Case sensitivity of filenames**
       The handling of filenames is now case-insensitive. This is a beneficial change for most platforms, other than Linux and iOS, which do not manage filename case sensitivity effectively.
       (On These, a warning will be displayed for files with the same name but different cases).

    2. **Revision handling of the chunks**
       Chunks are immutable, which allows their revisions to be fixed. This change will enhance the performance of file saving.

    ___However, to enable either of these changes, both remote and local
    databases need to be rebuilt. This process takes a few minutes, and we
    recommend doing it when you have ample time.___


    - If you wish to maintain the previous behaviour, you can skip this process
    by using `${KEEP}`.

    - If you do not have enough time, please choose `${DISMISS}`. You will be
    prompted again later.

    - If you have rebuilt the database on another device, please select
    `${DISMISS}` and try synchronizing again. Since a difference has been
    detected, you will be prompted again.
  optionAdjustRemote: Adjust to remote
  optionDecideLater: Decide it later
  optionEnableBoth: Enable both
  optionEnableFilenameCaseInsensitive: "Enable only #1"
  optionEnableFixedRevisionForChunks: "Enable only #2"
  optionHaveSetupUri: Yes, I have
  optionKeepPreviousBehaviour: Keep previous behaviour
  optionManualSetup: Set it up all manually
  optionNoAskAgain: No, please ask again
  optionNoSetupUri: No, I do not have
  optionRemindNextLaunch: Remind me at the next launch
  optionSetupViaP2P: Use %{short_p2p_sync} to set up
  optionSetupWizard: Take me into the setup wizard
  optionYesFetchAgain: Yes, fetch again
  titleCaseSensitivity: Case Sensitivity
  titleRecommendSetupUri: Recommendation to use Setup URI
  titleWelcome: Welcome to Self-hosted LiveSync
moduleObsidianMenu:
  replicate: Replicate
Move remotely deleted files to the trash, instead of deleting.: Move remotely deleted files to the trash, instead of deleting.
Not all messages have been translated. And, please revert to "Default" when reporting errors.:
  Not all messages have been translated. And, please revert to "Default" when
  reporting errors.
Notify all setting files: Notify all setting files
Notify customized: Notify customized
Notify when other device has newly customized.: Notify when other device has newly customized.
Notify when the estimated remote storage size exceeds on start up: Notify when the estimated remote storage size exceeds on start up
Number of batches to process at a time. Defaults to 40. Minimum is 2. This along with batch size controls how many docs are kept in memory at a time.:
  Number of batches to process at a time. Defaults to 40. Minimum is 2. This
  along with batch size controls how many docs are kept in memory at a time.
Number of changes to sync at a time. Defaults to 50. Minimum is 2.: Number of changes to sync at a time. Defaults to 50. Minimum is 2.
obsidianLiveSyncSettingTab:
  btnApply: Apply
  btnCheck: Check
  btnCopy: Copy
  btnDisable: Disable
  btnDiscard: Discard
  btnEnable: Enable
  btnFix: Fix
  btnGotItAndUpdated: I got it and updated.
  btnNext: Next
  btnStart: Start
  btnTest: Test
  btnUse: Use
  buttonFetch: Fetch
  buttonNext: Next
  defaultLanguage: Default
  descConnectSetupURI: This is the recommended method to set up Self-hosted
    LiveSync with a Setup URI.
  descCopySetupURI: Perfect for setting up a new device!
  descEnableLiveSync: Only enable this after configuring either of the above two
    options or completing all configuration manually.
  descFetchConfigFromRemote: Fetch necessary settings from already configured remote server.
  descManualSetup: Not recommended, but useful if you don't have a Setup URI
  descTestDatabaseConnection: Open database connection. If the remote database is
    not found and you have permission to create a database, the database will be
    created.
  descValidateDatabaseConfig: Checks and fixes any potential issues with the database config.
  errAccessForbidden: ❗ Access forbidden.
  errCannotContinueTest: We could not continue the test.
  errCorsCredentials: ❗ cors.credentials is wrong
  errCorsNotAllowingCredentials: ❗ CORS is not allowing credentials
  errCorsOrigins: ❗ cors.origins is wrong
  errEnableCors: ❗ httpd.enable_cors is wrong
  errMaxDocumentSize: ❗ couchdb.max_document_size is low)
  errMaxRequestSize: ❗ chttpd.max_http_request_size is low)
  errMissingWwwAuth: ❗ httpd.WWW-Authenticate is missing
  errRequireValidUser: ❗ chttpd.require_valid_user is wrong.
  errRequireValidUserAuth: ❗ chttpd_auth.require_valid_user is wrong.
  labelDisabled: "⏹️ : Disabled"
  labelEnabled: "🔁 : Enabled"
  levelAdvanced: " (Advanced)"
  levelEdgeCase: " (Edge Case)"
  levelPowerUser: " (Power User)"
  linkOpenInBrowser: Open in browser
  linkPageTop: Page Top
  linkTipsAndTroubleshooting: Tips and Troubleshooting
  linkTroubleshooting: /docs/troubleshooting.md
  logCannotUseCloudant: This feature cannot be used with IBM Cloudant.
  logCheckingConfigDone: Checking configuration done
  logCheckingConfigFailed: Checking configuration failed
  logCheckingDbConfig: Checking database configuration
  logCheckPassphraseFailed: |-
    ERROR: Failed to check passphrase with the remote server:
    ${db}.
  logConfiguredDisabled: "Configured synchronization mode: DISABLED"
  logConfiguredLiveSync: "Configured synchronization mode: LiveSync"
  logConfiguredPeriodic: "Configured synchronization mode: Periodic"
  logCouchDbConfigFail: "CouchDB Configuration: ${title} failed"
  logCouchDbConfigSet: "CouchDB Configuration: ${title} -> Set ${key} to ${value}"
  logCouchDbConfigUpdated: "CouchDB Configuration: ${title} successfully updated"
  logDatabaseConnected: Database connected
  logEncryptionNoPassphrase: You cannot enable encryption without a passphrase
  logEncryptionNoSupport: Your device does not support encryption.
  logErrorOccurred: An error occurred!!
  logEstimatedSize: "Estimated size: ${size}"
  logPassphraseInvalid: Passphrase is not valid, please fix it.
  logPassphraseNotCompatible: "ERROR: Passphrase is not compatible with the remote
    server! Please check it again!"
  logRebuildNote: Syncing has been disabled, fetch and re-enabled if desired.
  logSelectAnyPreset: Select any preset.
  msgAreYouSureProceed: Are you sure to proceed?
  msgChangesNeedToBeApplied: Changes need to be applied!
  msgConfigCheck: --Config check--
  msgConfigCheckFailed: The configuration check has failed. Do you want to continue anyway?
  msgConnectionCheck: --Connection check--
  msgConnectionProxyNote: If you're having trouble with the Connection-check (even
    after checking config), please check your reverse proxy configuration.
  msgCurrentOrigin: "Current origin: {origin}"
  msgDiscardConfirmation: Do you really want to discard existing settings and databases?
  msgDone: --Done--
  msgEnableCors: Set httpd.enable_cors
  msgEnableEncryptionRecommendation: We recommend enabling End-To-End Encryption,
    and Path Obfuscation. Are you sure you want to continue without encryption?
  msgFetchConfigFromRemote: Do you want to fetch the config from the remote server?
  msgGenerateSetupURI: All done! Do you want to generate a setup URI to set up other devices?
  msgIfConfigNotPersistent: If the server configuration is not persistent (e.g.,
    running on docker), the values here may change. Once you are able to
    connect, please update the settings in the server's local.ini.
  msgInvalidPassphrase: Your encryption passphrase might be invalid. Are you sure
    you want to continue?
  msgNewVersionNote: Here due to an upgrade notification? Please review the
    version history. If you're satisfied, click the button. A new update will
    prompt this again.
  msgNonHTTPSInfo: Configured as non-HTTPS URI. Be warned that this may not work
    on mobile devices.
  msgNonHTTPSWarning: Cannot connect to non-HTTPS URI. Please update your config and try again.
  msgNotice: ---Notice---
  msgObjectStorageWarning: >-
    WARNING: This feature is a Work In Progress, so please keep in mind the
    following:

    - Append only architecture. A rebuild is required to shrink the storage.

    - A bit fragile.

    - When first syncing, all history will be transferred from the remote. Be
    mindful of data caps and slow speeds.

    - Only differences are synced live.


    If you run into any issues, or have ideas about this feature, please create
    a issue on GitHub.

    I appreciate you for your great dedication.
  msgOriginCheck: "Origin check: {org}"
  msgRebuildRequired: >-
    Rebuilding Databases are required to apply the changes.. Please select the
    method to apply the changes.


    <details>

    <summary>Legends</summary>


    | Symbol | Meaning |

    |: ------ :| ------- |

    | ⇔ | Up to Date |

    | ⇄ | Synchronise to balance |

    | ⇐,⇒ | Transfer to overwrite |

    | ⇠,⇢ | Transfer to overwrite from other side |


    </details>


    ## ${OPTION_REBUILD_BOTH}

    At a glance:  📄 ⇒¹ 💻 ⇒² 🛰️ ⇢ⁿ 💻 ⇄ⁿ⁺¹ 📄

    Reconstruct both the local and remote databases using existing files from
    this device.

    This causes a lockout other devices, and they need to perform fetching.

    ## ${OPTION_FETCH}

    At a glance: 📄 ⇄² 💻 ⇐¹ 🛰️ ⇔ 💻 ⇔ 📄

    Initialise the local database and reconstruct it using data fetched from the
    remote database.

    This case includes the case which you have rebuilt the remote database.

    ## ${OPTION_ONLY_SETTING}

    Store only the settings. **Caution: This may lead to data corruption**;
    database reconstruction is generally necessary.
  msgSelectAndApplyPreset: Please select and apply any preset item to complete the wizard.
  msgSetCorsCredentials: Set cors.credentials
  msgSetCorsOrigins: Set cors.origins
  msgSetMaxDocSize: Set couchdb.max_document_size
  msgSetMaxRequestSize: Set chttpd.max_http_request_size
  msgSetRequireValidUser: Set chttpd.require_valid_user = true
  msgSetRequireValidUserAuth: Set chttpd_auth.require_valid_user = true
  msgSettingModified: The setting "${setting}" was modified from another device.
    Click {HERE} to reload settings. Click elsewhere to ignore changes.
  msgSettingsUnchangeableDuringSync: These settings are unable to be changed
    during synchronization. Please disable all syncing in the "Sync Settings" to
    unlock.
  msgSetWwwAuth: Set httpd.WWW-Authenticate
  nameApplySettings: Apply Settings
  nameConnectSetupURI: Connect with Setup URI
  nameCopySetupURI: Copy the current settings to a Setup URI
  nameDisableHiddenFileSync: Disable Hidden files sync
  nameDiscardSettings: Discard existing settings and databases
  nameEnableHiddenFileSync: Enable Hidden files sync
  nameEnableLiveSync: Enable LiveSync
  nameHiddenFileSynchronization: Hidden file synchronization
  nameManualSetup: Manual Setup
  nameTestConnection: Test Connection
  nameTestDatabaseConnection: Test Database Connection
  nameValidateDatabaseConfig: Validate Database Configuration
  okAdminPrivileges: ✔ You have administrator privileges.
  okCorsCredentials: ✔ cors.credentials is ok.
  okCorsCredentialsForOrigin: CORS credentials OK
  okCorsOriginMatched: ✔ CORS origin OK
  okCorsOrigins: ✔ cors.origins is ok.
  okEnableCors: ✔ httpd.enable_cors is ok.
  okMaxDocumentSize: ✔ couchdb.max_document_size is ok.
  okMaxRequestSize: ✔ chttpd.max_http_request_size is ok.
  okRequireValidUser: ✔ chttpd.require_valid_user is ok.
  okRequireValidUserAuth: ✔ chttpd_auth.require_valid_user is ok.
  okWwwAuth: ✔ httpd.WWW-Authenticate is ok.
  optionApply: Apply
  optionCancel: Cancel
  optionCouchDB: CouchDB
  optionDisableAllAutomatic: Disable all automatic
  optionFetchFromRemote: Fetch from Remote
  optionHere: HERE
  optionLiveSync: LiveSync
  optionMinioS3R2: Minio,S3,R2
  optionOkReadEverything: OK, I have read everything.
  optionOnEvents: On events
  optionPeriodicAndEvents: Periodic and on events
  optionPeriodicWithBatch: Periodic w/ batch
  optionRebuildBoth: Rebuild Both from This Device
  optionSaveOnlySettings: (Danger) Save Only Settings
  panelChangeLog: Change Log
  panelGeneralSettings: General Settings
  panelPrivacyEncryption: Privacy & Encryption
  panelRemoteConfiguration: Remote Configuration
  panelSetup: Setup
  titleAppearance: Appearance
  titleConflictResolution: Conflict resolution
  titleCongratulations: Congratulations!
  titleCouchDB: CouchDB
  titleDeletionPropagation: Deletion Propagation
  titleEncryptionNotEnabled: Encryption is not enabled
  titleEncryptionPassphraseInvalid: Encryption Passphrase Invalid
  titleExtraFeatures: Enable extra and advanced features
  titleFetchConfig: Fetch Config
  titleFetchConfigFromRemote: Fetch config from remote server
  titleFetchSettings: Fetch Settings
  titleHiddenFiles: Hidden Files
  titleLogging: Logging
  titleMinioS3R2: Minio,S3,R2
  titleNotification: Notification
  titleOnlineTips: Online Tips
  titleQuickSetup: Quick Setup
  titleRebuildRequired: Rebuild Required
  titleRemoteConfigCheckFailed: Remote Configuration Check Failed
  titleRemoteServer: Remote Server
  titleReset: Reset
  titleSetupOtherDevices: To setup other devices
  titleSynchronizationMethod: Synchronization Method
  titleSynchronizationPreset: Synchronization Preset
  titleSyncSettings: Sync Settings
  titleSyncSettingsViaMarkdown: Sync Settings via Markdown
  titleUpdateThinning: Update Thinning
  warnCorsOriginUnmatched: ⚠ CORS Origin is unmatched {from}->{to}
  warnNoAdmin: ⚠ You do not have administrator privileges.
P2P:
  AskPassphraseForDecrypt: The remote peer shared the configuration. Please input
    the passphrase to decrypt the configuration.
  AskPassphraseForShare: The remote peer requested this device configuration.
    Please input the passphrase to share the configuration. You can ignore the
    request by cancelling this dialogue.
  DisabledButNeed: "%{title_p2p_sync} is disabled. Do you really want to enable it?"
  FailedToOpen: Failed to open P2P connection to the signaling server.
  NoAutoSyncPeers: No auto-sync peers found. Please set peers on the %{long_p2p_sync} pane.
  NoKnownPeers: No peers has been detected, waiting incoming other peers...
  Note:
    description: >2-
       This replicator allows us to synchronise our vault with other devices
      using a peer-to-peer connection. We can        use this to synchronise our
      vault with our other devices without using a cloud service.

      This replicator is based on Trystero. It also uses a signaling server to
      establish a connection between devices. The signaling server is used to
      exchange connection information between devices. It does (or,should) not
      know or store any of our data.


      The signaling server can be hosted by anyone. This is just a Nostr relay.
      For the sake of simplicity and checking the behaviour of the replicator,
      an instance of the signaling server is hosted by vrtmrz. You can use the
      experimental server provided by vrtmrz, or you can use any other server.


      By the way, even if the signaling server does not store our data, it can
      see the connection information of some of our devices. Please be aware of
      this. Also, be cautious when using the server provided by someone else.
    important_note: The Experimental Implementation of the Peer-to-Peer Replicator.
    important_note_sub: This feature is still in the experimental stage. Please be
      aware that this feature may not work as expected. Furthermore, it may have
      some bugs, security issues, and other issues. Please use this feature at
      your own risk. Please contribute to the development of this feature.
    Summary: What is this  feature? (and some important notes, please read once)
  NotEnabled: "%{title_p2p_sync} is not enabled. We cannot open a new connection."
  P2PReplication: "%{P2P} Replication"
  PaneTitle: "%{long_p2p_sync}"
  ReplicatorInstanceMissing: P2P Sync replicator is not found, possibly not have
    been configured or enabled.
  SeemsOffline: Peer ${name} seems offline, skipped.
  SyncAlreadyRunning: P2P Sync is already running.
  SyncCompleted: P2P Sync completed.
  SyncStartedWith: P2P Sync with ${name} have been started.
Passphrase: Passphrase
Passphrase of sensitive configuration items: Passphrase of sensitive configuration items
password: password
Password: Password
Path Obfuscation: Path Obfuscation
Per-file-saved customization sync: Per-file-saved customization sync
Periodic Sync interval: Periodic Sync interval
Presets: Presets
Process small files in the foreground: Process small files in the foreground
RedFlag:
  Fetch:
    Method:
      Desc: >-
        How do you want to fetch?

        - %{RedFlag.Fetch.Method.FetchSafer}. (Recommended)
          **Low Traffic**, **High CPU**, **Low Risk**
        - %{RedFlag.Fetch.Method.FetchSmoother}.
          **Low Traffic**, **Moderate CPU**, **Low to Moderate Risk**
        - %{RedFlag.Fetch.Method.FetchTraditional}.
          **High Traffic**, **Low CPU**, **Low to Moderate Risk**

        >[!INFO]- Details

        > ## %{RedFlag.Fetch.Method.FetchSafer}. (Recommended)

        > **Low Traffic**, **High CPU**, **Low Risk**

        > This option first creates a local database using existing local files
        before fetching data from the remote source.

        > If matching files exist both locally and remotely, only the
        differences between them will be transferred.

        > However, files present in both locations will initially be handled as
        conflicted files. They will be resolved automatically if they are not
        actually conflicted, but this process may take time.

        > This is generally the safest method, minimizing data loss risk.

        > ## %{RedFlag.Fetch.Method.FetchSmoother}.

        > **Low Traffic**, **Moderate CPU**, **Low to Moderate Risk** (depending
        operation)

        > This option first creates chunks from local files for the database,
        then fetches data. Consequently, only chunks missing locally are
        transferred. However, all metadata is taken from the remote source.

        > Local files are then compared against this metadata at launch. The
        content considered newer will overwrite the older one (by modified
        time). This outcome is then synchronised back to the remote database.

        > This is generally safe if local files are genuinely the latest
        timestamp. However, it can cause problems if a file has a newer
        timestamp but older content (like the initial `welcome.md`).

        > This uses less CPU and faster than
        "%{RedFlag.Fetch.Method.FetchSafer}", but it may lead to data loss if
        not used carefully.

        > ## %{RedFlag.Fetch.Method.FetchTraditional}.

        > **High Traffic**, **Low CPU**, **Low to Moderate Risk** (depending
        operation)

        > All things will be fetched from the remote.

        > Similar to the %{RedFlag.Fetch.Method.FetchSmoother}, but all chunks
        are fetched from the remote source.

        > This is the most traditional way to fetch, typically consuming the
        most network traffic and time. It also carries a similar risk of
        overwriting remote files to the '%{RedFlag.Fetch.Method.FetchSmoother}'
        option.

        > However, it is often considered the most stable method because it is
        the longest-established and most straightforward approach.
      FetchSafer: Create a local database once before fetching
      FetchSmoother: Create local file chunks before fetching
      FetchTraditional: Fetch everything from the remote
      Title: How do you want to fetch?
Reducing the frequency with which on-disk changes are reflected into the DB: Reducing the frequency with which on-disk changes are reflected into the DB
Region: Region
Remote server type: Remote server type
Remote Type: Remote Type
Replicator:
  Dialogue:
    Locked:
      Action:
        Dismiss: Cancel for reconfirmation
        Fetch: Fetch all from the remote database again
        Unlock: Unlock the remote database
      Message:
        _value: >
          Remote database is locked. This is due to a rebuild on one of the
          terminals.

          The device is therefore asked to withhold the connection to avoid
          database corruption.


          There are three options that we can do:


          - %{Replicator.Dialogue.Locked.Action.Fetch}
            The most preferred and reliable way. This will dispose the local database once, and fetch all from the remote database again, In most case, we can perform this safely. However, it takes some time and should be done in stable network.
          - %{Replicator.Dialogue.Locked.Action.Unlock}
            This method can only be used if we are already reliably synchronised by other replication methods. This does not simply mean that we have the same files. If you are not sure, you should avoid it.
          - %{Replicator.Dialogue.Locked.Action.Dismiss}
              This will cancel the operation. And we will asked again on next request.
        Fetch: Fetch all has been scheduled. Plug-in will be restarted to perform it.
        Unlocked: The remote database has been unlocked. Please retry the operation.
      Title: Locked
  Message:
    Cleaned: Database cleaning up is in process. replication has been cancelled
    InitialiseFatalError: No replicator is available, this is the fatal error.
    Pending: Some file events are pending. Replication has been cancelled.
    SomeModuleFailed: Replication has been cancelled by some module failure
    VersionUpFlash: Open settings and check message, please. replication has been cancelled.
Requires restart of Obsidian: Requires restart of Obsidian
Requires restart of Obsidian.: Requires restart of Obsidian.
Save settings to a markdown file. You will be notified when new settings arrive. You can set different files by the platform.:
  Save settings to a markdown file. You will be notified when new settings
  arrive. You can set different files by the platform.
Saving will be performed forcefully after this number of seconds.: Saving will be performed forcefully after this number of seconds.
Scan changes on customization sync: Scan changes on customization sync
Scan customization automatically: Scan customization automatically
Scan customization before replicating.: Scan customization before replicating.
Scan customization every 1 minute.: Scan customization every 1 minute.
Scan customization periodically: Scan customization periodically
Scan for hidden files before replication: Scan for hidden files before replication
Scan hidden files periodically: Scan hidden files periodically
Seconds, 0 to disable: Seconds, 0 to disable
Seconds. Saving to the local database will be delayed until this value after we stop typing or saving.:
  Seconds. Saving to the local database will be delayed until this value after
  we stop typing or saving.
Secret Key: Secret Key
Server URI: Server URI
Setting:
  GenerateKeyPair:
    Desc: >+
      We have generated a key pair!


      Note: This key pair will never be shown again. Please save it in a safe
      place. If you have lost it, you need to generate a new key pair.

      Note 2: The public key is in spki format, and the Private key is in pkcs8
      format. For the sake of convenience, newlines are converted to `\n` in
      public key.

      Note 3: The public key should be configured in the remote database, and
      the private key should be configured in local devices.


      >[!FOR YOUR EYES ONLY]-

      > <div class="sls-keypair">

      >

      > ### Public Key

      > ```

      ${public_key}

      > ```

      >

      > ### Private Key

      > ```

      ${private_key}

      > ```

      >

      > </div>


      >[!Both for copying]-

      >

      > <div class="sls-keypair">

      >

      > ```

      ${public_key}

      ${private_key}

      > ```

      >

      > </div>

    Title: New key pair has been generated!
  TroubleShooting:
    _value: TroubleShooting
    Doctor:
      _value: Setting Doctor
      Desc: Detects non optimal settings. (Same as during migration)
SettingTab:
  Message:
    AskRebuild: Your changes require fetching from the remote database. Do you want
      to proceed?
Setup:
  QRCode: >-
    We have generated a QR code to transfer the settings. Please scan the QR
    code with your phone or other device.

    Note: The QR code is not encrypted, so be careful to open this.


    >[!FOR YOUR EYES ONLY]-

    > <div class="sls-qr">${qr_image}</div>
  ShowQRCode:
    _value: Show QR code
    Desc: Show QR code to transfer the settings.
Should we keep folders that don't have any files inside?: Should we keep folders that don't have any files inside?
Should we only check for conflicts when a file is opened?: Should we only check for conflicts when a file is opened?
Should we prompt you about conflicting files when a file is opened?: Should we prompt you about conflicting files when a file is opened?
Should we prompt you for every single merge, even if we can safely merge automatcially?:
  Should we prompt you for every single merge, even if we can safely merge
  automatcially?
Show only notifications: Show only notifications
Show status as icons only: Show status as icons only
Show status inside the editor: Show status inside the editor
Show status on the status bar: Show status on the status bar
Show verbose log. Please enable if you report an issue.: Show verbose log. Please enable if you report an issue.
Starts synchronisation when a file is saved.: Starts synchronisation when a file is saved.
Stop reflecting database changes to storage files.: Stop reflecting database changes to storage files.
Stop watching for file changes.: Stop watching for file changes.
Suppress notification of hidden files change: Suppress notification of hidden files change
Suspend database reflecting: Suspend database reflecting
Suspend file watching: Suspend file watching
Sync after merging file: Sync after merging file
Sync automatically after merging files: Sync automatically after merging files
Sync Mode: Sync Mode
Sync on Editor Save: Sync on Editor Save
Sync on File Open: Sync on File Open
Sync on Save: Sync on Save
Sync on Startup: Sync on Startup
Testing only - Resolve file conflicts by syncing newer copies of the file, this can overwrite modified files. Be Warned.:
  Testing only - Resolve file conflicts by syncing newer copies of the file,
  this can overwrite modified files. Be Warned.
The delay for consecutive on-demand fetches: The delay for consecutive on-demand fetches
The Hash algorithm for chunk IDs: The Hash algorithm for chunk IDs
The maximum duration for which chunks can be incubated within the document. Chunks exceeding this period will graduate to independent chunks.:
  The maximum duration for which chunks can be incubated within the document.
  Chunks exceeding this period will graduate to independent chunks.
The maximum number of chunks that can be incubated within the document. Chunks exceeding this number will immediately graduate to independent chunks.:
  The maximum number of chunks that can be incubated within the document. Chunks
  exceeding this number will immediately graduate to independent chunks.
The maximum total size of chunks that can be incubated within the document. Chunks exceeding this size will immediately graduate to independent chunks.:
  The maximum total size of chunks that can be incubated within the document.
  Chunks exceeding this size will immediately graduate to independent chunks.
This passphrase will not be copied to another device. It will be set to `Default` until you configure it again.:
  This passphrase will not be copied to another device. It will be set to
  `Default` until you configure it again.
TweakMismatchResolve:
  Action:
    Dismiss: Dismiss
    UseConfigured: Use configured settings
    UseMine: Update remote database settings
    UseMineAcceptIncompatible: Update remote database settings but keep as is
    UseMineWithRebuild: Update remote database settings and rebuild again
    UseRemote: Apply settings to this device
    UseRemoteAcceptIncompatible: Apply settings to this device, but and ignore incompatibility
    UseRemoteWithRebuild: Apply settings to this device, and fetch again
  Message:
    Main: >-

      The settings in the remote database are as follows. These values are
      configured by other devices, which are synchronised with this device at
      least once.


      If you want to use these settings, please select
      %{TweakMismatchResolve.Action.UseConfigured}.

      If you want to keep the settings of this device, please select
      %{TweakMismatchResolve.Action.Dismiss}.


      ${table}


      >[!TIP]

      > If you want to synchronise all settings, please use `Sync settings via
      markdown` after applying minimal configuration with this feature.


      ${additionalMessage}
    MainTweakResolving: |-
      Your configuration has not been matched with the one on the remote server.

      Following configuration should be matched:

      ${table}

      Let us know your decision.

      ${additionalMessage}
    UseRemote:
      WarningRebuildRecommended: >-

        >[!NOTICE]

        > Some changes are compatible but may consume extra storage and transfer
        volumes. A rebuild is recommended. However, a rebuild may not be
        performed at present, but may be implemented in future maintenance.

        > ***Please ensure that you have time and are connected to a stable
        network to apply!***
      WarningRebuildRequired: >-

        >[!WARNING]

        > Some remote configurations are not compatible with the local database
        of this device. Rebuilding the local database will be required.

        > ***Please ensure that you have time and are connected to a stable
        network to apply!***
    WarningIncompatibleRebuildRecommended: >-

      >[!NOTICE]

      > We have detected that some of the values are different to make
      incompatible the local database with the remote database.

      > Some changes are compatible but may consume extra storage and transfer
      volumes. A rebuild is recommended. However, a rebuild may not be performed
      at present, but may be implemented in future maintenance.

      > If you want to rebuild, it takes a few minutes or more. **Make sure it
      is safe to perform it now.**
    WarningIncompatibleRebuildRequired: >-

      >[!WARNING]

      > We have detected that some of the values are different to make
      incompatible the local database with the remote database.

      > Either local or remote rebuilds are required. Both of them takes a few
      minutes or more. **Make sure it is safe to perform it now.**
  Table:
    _value: |+
      | Value name | This device | On Remote |
      |: --- |: ---- :|: ---- :|
      ${rows}

    Row: "| ${name} | ${self} | ${remote} |"
  Title:
    _value: Configuration Mismatch Detected
    TweakResolving: Configuration Mismatch Detected
    UseRemoteConfig: Use Remote Configuration
Unique name between all synchronized devices. To edit this setting, please disable customization sync once.:
  Unique name between all synchronized devices. To edit this setting, please
  disable customization sync once.
Use Custom HTTP Handler: Use Custom HTTP Handler
Use dynamic iteration count: Use dynamic iteration count
Use Segmented-splitter: Use Segmented-splitter
Use splitting-limit-capped chunk splitter: Use splitting-limit-capped chunk splitter
Use the trash bin: Use the trash bin
Use timeouts instead of heartbeats: Use timeouts instead of heartbeats
username: username
Username: Username
Verbose Log: Verbose Log
Warning! This will have a serious impact on performance. And the logs will not be synchronised under the default name. Please be careful with logs; they often contain your confidential information.:
  Warning! This will have a serious impact on performance. And the logs will not
  be synchronised under the default name. Please be careful with logs; they
  often contain your confidential information.
When you save a file in the editor, start a sync automatically: When you save a file in the editor, start a sync automatically
Write credentials in the file: Write credentials in the file
Write logs into the file: Write logs into the file
